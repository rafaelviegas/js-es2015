{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AAET,uCAAYC,UAAZ,EAAuB;AAAA;;AAEnB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAW;AAAA;;AAEhB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;;AAEvC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACiB,WADjB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKII,oCAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,6BAFD;AAGAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,0CAAP;AACH,6BAHD;AAIH,yBAdM,CAAP;AAeH;;;iDAEW;AAAA;;AAER,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;;AAErC,gCAAIY,SAAU,OAAKjB,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACe,WADf,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGXiB,UAHW,EAAd;;AAKE,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;;AAErB,oCAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,oCAAGD,KAAH,EAAS;AACL,wCAAIE,OAAOF,MAAMG,KAAjB;;AAEAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA0BH,KAAKI,WAA/B,EAA2CJ,KAAKK,MAAhD,CAAjB;;AAEAP,0CAAMQ,QAAN;AACH,iCAND,MAMK;AACDxB,4CAAQe,WAAR;AACH;AAEH,6BAdD;;AAgBAF,mCAAON,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAKH,yBA9BM,CAAP;AA+BH;;;iDACW;AAAA;;AACN,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;;AAErC,gCAAIC,UAAW,OAAKN,WAAL,CACVO,WADU,CACE,CAAC,OAAKN,MAAN,CADF,EACgB,WADhB,EAEVO,WAFU,CAEE,OAAKP,MAFP,EAGV4B,KAHU,EAAf;;AAKAvB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,mCAAR,CAAL;AAAA,6BAApB;;AAEAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAKD,yBAdM,CAAP;AAeL","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection){\r\n\r\n        this._connection = connection;\r\n        this._store = 'Negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao){\r\n\r\n        return new Promise((resolve,reject) => {\r\n\r\n        let request = this._connection\r\n            .transaction([this._store],'readwrite')\r\n            .objectStore(this._store)\r\n            .add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n                resolve();\r\n            };\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possivel adicionar a negociação.');\r\n            }\r\n        });\r\n    }\r\n\r\n    listaTodos(){\r\n        \r\n        return new Promise((resolve,reject) => {\r\n\r\n          let cursor =  this._connection\r\n            .transaction([this._store],'readwrite')\r\n            .objectStore(this._store)\r\n            .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n               \r\n               let atual = e.target.result;\r\n\r\n               if(atual){\r\n                   let dado = atual.value;\r\n\r\n                   negociacoes.push(new Negociacao(dado._data,dado._quantidade,dado._valor));\r\n                   \r\n                   atual.continue();\r\n               }else{\r\n                   resolve(negociacoes);\r\n               }\r\n\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possivel listar as negociações')\r\n            };\r\n\r\n        }); \r\n    }\r\n    apagaTodos(){\r\n          return new Promise((resolve,reject) => {\r\n\r\n            let request =  this._connection\r\n                .transaction([this._store],'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n            \r\n            request.onsuccess = e => resolve('Negociações removidas com sucesso');\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível remover as negociações');\r\n            }\r\n\r\n          });\r\n    }\r\n}"]}